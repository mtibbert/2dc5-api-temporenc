{
  "openapi": "3.0.1",
  "info": {
    "title": "Temporenc",
    "description": "## An API to Temporenc encode/decode dates\n- Encodes *date*, *time*, or *datetime* ISO strings.\n- Decodes Temporenc encoded values.\n",
    "version": "0.0.1",
    "contact": {
      "name": "Temporenc API Team",
      "email": "temporenc.api.team.v@qneni.com"
    }
  },
  "servers": [
    {
      "url": "/api/v1/temporenc/"
    }
  ],
  "tags": [
    {
      "name": "encode",
      "description": "Encode *date*, *time*, or *datetime* ISO strings."
    },
    {
      "name": "decode",
      "description": "Decode Temporenc hexadecimal strings."
    }
  ],
  "paths": {
    "/decode/{encoded_str}": {
      "get": {
        "summary": "Decode a Temporenc encoded hexadecimal string",
        "tags": [
          "decode"
        ],
        "operationId": "do_decode_encoded_str",
        "parameters": [
          {
            "in": "path",
            "name": "encoded_str",
            "description": "Hexadecimal string string to decode.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json ": {
                "schema": {
                  "$ref": "#/components/schemas/Codec"
                }
              }
            }
          },
          "400": {
            "description": "Invalid encoded string",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Respose_404"
                }
              }
            }
          }
        }
      }
    },
    "/encode/{iso_string}": {
      "get": {
        "summary": "Encode an ISO string",
        "tags": [
          "encode"
        ],
        "operationId": "doEncode",
        "parameters": [
          {
            "in": "path",
            "name": "iso_string",
            "description": "ISO string to encode.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Codec"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID ISO String"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Codec": {
        "type": "object",
        "properties": {
          "decoded": {
            "type": "string",
            "example": "E3F396E0D803DC40"
          },
          "encoded": {
            "type": "string",
            "example": "2023-03-28T17:27:00.123+01:00"
          },
          "precision": {
            "type": "string",
            "example": "PRECISION_MILLI",
            "enum": [
              "PRECISION_MICRO",
              "PRECISION_MILLI",
              "PRECISION_NANO",
              "PRECISION_NONE",
              "PRECISION_NON_PRECISE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "TYPE_D","TYPE_T","TYPE_DT",
              "TYPE_DTS","TYPE_DTZ","TYPE_DTSZ"],
            "example": "TYPE_DTS"
          }
        },
        "example":{
          "decoded": "2023-03-28T17:27:00.123+01:00",
          "encoded": "E3F396E0D803DC40",
          "precision": "PRECISION_MILLISECOND",
          "type_ext": "TYPE_DTSZ"
        }
      },
      "Respose_404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Resource not found: 'A3F396E0D803DC40' not recognized as TYPE_T"
          }
        },
        "example":{
          "message": "Resource not found: 'A3F396E0D803DC40' not recognized as TYPE_T"
        }
      }
    }
  }
}
